<% if (folders) { %> <% folders.map(folder => { %>
<tr class="table-row">
  <th>
    <a href="/folder/<%= folder.external_id %>">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="lucide lucide-folder-closed"
      >
        <path
          d="M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
        />
        <path d="M2 10h20" />
      </svg>
      <%= folder.name || 'New Folder' %>
    </a>
  </th>
  <th><%= folder.size || '2.64MB' %></th>
  <th><%= folder.createdAt %></th>
  <th>
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="options-btn"
      onclick="toggleDropdown(event)"
    >
      <circle cx="12" cy="12" r="1" />
      <circle cx="19" cy="12" r="1" />
      <circle cx="5" cy="12" r="1" />
    </svg>
    <!-- Dropdown Menu -->
    <div class="dropdown-menu">
      <ul>
        <li>
          <a class="update-btn"
            ><svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="lucide lucide-file-pen-line"
            >
              <path
                d="m18 5-2.414-2.414A2 2 0 0 0 14.172 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2"
              />
              <path
                d="M21.378 12.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
              />
              <path d="M8 18h1" />
            </svg>
            Edit</a
          >
        </li>
        <li>
          <a class="delete-btn" href="/folder/<%= folder.external_id %>/delete"
            ><svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="lucide lucide-trash-2"
            >
              <path d="M3 6h18" />
              <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" />
              <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" />
              <line x1="10" x2="10" y1="11" y2="17" />
              <line x1="14" x2="14" y1="11" y2="17" />
            </svg>
            Delete</a
          >
        </li>
        <li>
          <a
            class="delete-btn"
            href="/folder/<%= folder.external_id %>/download"
            ><svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="lucide lucide-download"
            >
              <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" />
              <polyline points="7 10 12 15 17 10" />
              <line x1="12" x2="12" y1="15" y2="3" />
            </svg>
            Download</a
          >
        </li>
      </ul>
    </div>
  </th>
</tr>
<% }) %> <% } %>

<script>
  function toggleDropdown(event) {
    const dropdown = event.target.closest("tr").querySelector(".dropdown-menu");
    const allDropdowns = document.querySelectorAll(".dropdown-menu");

    // Close all other dropdowns
    allDropdowns.forEach((menu) => {
      if (menu !== dropdown) {
        menu.style.display = "none";
      }
    });

    // Toggle the clicked dropdown
    dropdown.style.display =
      dropdown.style.display === "block" ? "none" : "block";
  }

  // Close dropdowns if clicked outside
  document.addEventListener("click", (e) => {
    if (!e.target.closest(".options-btn")) {
      document.querySelectorAll(".dropdown-menu").forEach((menu) => {
        menu.style.display = "none";
      });
    }
  });

  document.querySelector(".update-btn").addEventListener("click", () => {
    console.log(document.querySelector("#update-modal"));
    document.querySelector("#update-modal").showModal();
  });

  document.querySelector(".cancel-btn").addEventListener("click", () => {
    document.querySelector("#update-modal").close();
  });
</script>
